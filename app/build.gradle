apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    signingConfigs {
    }
    compileSdkVersion rootProject.ext.compileSdk
    buildToolsVersion rootProject.ext.supportVersion
    defaultConfig {
        applicationId "flhan.de.financemanager"
        minSdkVersion rootProject.ext.minSdk
        targetSdkVersion rootProject.ext.compileSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    configurations.all { final config ->
        if (config.name.contains('UnitTest') || config.name.contains('AndroidTest')) {
            config.resolutionStrategy.eachDependency { final details ->
                if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                    details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Support Libs
    implementation "com.android.support:appcompat-v7:$rootProject.supportVersion"
    implementation "com.android.support:design:$rootProject.supportVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"

    // RX
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxkotlin:$rootProject.rxkotlinVersion"

    // Firebase
    implementation "com.google.firebase:firebase-auth:$rootProject.firebaseVersion"
    implementation "com.google.firebase:firebase-core:$rootProject.firebaseVersion"
    implementation "com.google.firebase:firebase-database:$rootProject.firebaseVersion"
    implementation "com.google.android.gms:play-services-auth:$rootProject.firebaseVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"

    // Architecture Components
    implementation "android.arch.lifecycle:extensions:$rootProject.archComponentsVersion"
    testImplementation "android.arch.core:core-testing:$rootProject.archComponentsVersion"
    implementation "android.arch.lifecycle:reactivestreams:$rootProject.archComponentsVersion"

    // UI
    implementation "com.amulyakhare:com.amulyakhare.textdrawable:$rootProject.textdrawableVersion"
    implementation "com.roughike:bottom-bar:$rootProject.roughikeVersion"

    // Butterknife
    implementation "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    kapt "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    // Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakCanaryVersion"

    // Test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
}

apply plugin: 'com.google.gms.google-services'